{"version":3,"sources":["src/store.js"],"names":[],"mappings":"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","file":"src/store.js","sourcesContent":["var _storeCounter = 1;\n\nexport class Store {\n    static decorate(owner, name, dispatcher, handlers) {\n        var store = new Store(name, dispatcher, handlers, null, owner);\n        Object.defineProperties(owner, {\n            _storeDecorator: {\n                configurable: false,\n                writable: false,\n                enumberable: false,\n                value: store\n            },\n            name: {\n                get: store.getName.bind(store),\n                set: store.setName.bind(store)\n            },\n            dispatcher: {\n                get: store.getDispatcher.bind(store),\n                set: store.setDispatcher.bind(store)\n            },\n            dispatch: {\n                configurable: true,\n                writable: true,\n                enumberable: false,\n                value: store.dispatch.bind(store)\n            },\n            waitFor: {\n                configurable: true,\n                writable: true,\n                enumberable: false,\n                value: store.waitFor.bind(store)\n            }\n        });\n\n        if (owner.initialize instanceof Function) {\n            owner.initialize();\n        }\n    }\n\n    constructor(name, dispatcher, handlers = {}, initializeFn = null, handlerContext = null) {\n        this.setName(name);\n        this.setDispatcher(dispatcher);\n\n        this.handlers = new Map();\n\n        for (let [action, handler] of _entries(handlers)) {\n            this.addActionHandler(action, handler);\n        }\n\n        if (initializeFn) {\n            this.initialize = initializeFn.bind(this);\n            this.initialize();\n        }\n\n        this.handlerContext = handlerContext || this;\n    }\n\n    setDispatcher(dispatcher) {\n        if (this.dispatcher && this.dispatcher !== dispatcher) {\n            this.dispatcher.unregister(this.name);\n        }\n        dispatcher.register(this.name, this.callback.bind(this));\n        this.dispatcher = dispatcher;\n    }\n\n    getDispatcher() {\n        return this.dispatcher;\n    }\n\n    /**\n     * Dispatches an action to the dispatcher defined on this Actions\n     *\n     * @return { Promise } A promise to be resolved when all the callbacks have finised.\n     */\n    dispatch(actionType) {\n        var args = Array.from(arguments);\n        return this.dispatcher.dispatch(actionType, ...args.slice(1));\n    }\n\n    setName(name) {\n        this.name = name;\n    }\n\n    getName() {\n        if (!this.name) {\n            this.name = `luxaflux-store-name-${_storeCounter++}`;\n        }\n        return this.name;\n    }\n\n    /**\n     * Creates a promise and waits for the callbacks specified to complete before resolve it.\n     *\n     * @param  {String<Array>|String} tokens The store tokens to wait for.\n     * @return {Promise} A promise to be resolved when the specified callbacks are completed.\n     */\n    waitFor(tokens) {\n        return this.dispatcher.waitFor(tokens);\n    }\n\n    /**\n     * This is the callback method that needs to be registered with the dispatcher\n     */\n    callback(action) {\n        var handler = this.handlers.get(action);\n        if (handler) {\n            handler.call(this.handlerContext, ...Array.from(arguments).slice(1));\n        }\n    }\n\n    /**\n     * Bind callback to specific action\n     *\n     * @param {Object} callback An object where each key is the name of an action\n     * and the value is the callback to be called when that action is dispatched\n     */\n    addActionHandler(action, handler) {\n        this.handlers.set(action, handler);\n    }\n}\n\nexport default Store;\n\n// using a generator function\nfunction* _entries(obj) {\n   for (let key of Object.keys(obj)) {\n     yield [key, obj[key]];\n   }\n}\n"]}