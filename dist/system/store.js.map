{"version":3,"sources":["../../src/store.js"],"names":[],"mappings":"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","file":"store.js","sourcesContent":["var _storeCounter = 1;\n\nexport class Store {\n    static decorate(owner, name, dispatcher, handlers) {\n        var store = new Store(name, dispatcher, handlers, null, owner);\n        Object.defineProperties(owner, {\n            _storeDecorator: {\n                configurable: false,\n                writable: false,\n                enumerable: false,\n                value: store\n            },\n            name: {\n                get: store.getName.bind(store),\n                set: store.setName.bind(store)\n            },\n            dispatcher: {\n                get: store.getDispatcher.bind(store),\n                set: store.setDispatcher.bind(store)\n            },\n            dispatch: {\n                configurable: true,\n                writable: true,\n                enumerable: false,\n                value: store.dispatch.bind(store)\n            },\n            waitFor: {\n                configurable: true,\n                writable: true,\n                enumerable: false,\n                value: store.waitFor.bind(store)\n            },\n            destroy: {\n                configurable: true,\n                writable: true,\n                enumerable: false,\n                value: store.destroy.bind(store)\n            }\n        });\n\n        if (owner.initialize instanceof Function) {\n            owner.initialize();\n        }\n    }\n\n    constructor(name, dispatcher = null, handlers = {}, initializeFn = null, handlerContext = null) {\n        this.setName(name);\n        this.setDispatcher(dispatcher);\n\n        this.handlers = new Map();\n\n        for (let [action, handler] of _entries(handlers)) {\n            this.addActionHandler(action, handler);\n        }\n\n        if (initializeFn) {\n            this.initialize = initializeFn.bind(this);\n            this.initialize();\n        }\n\n        this.handlerContext = handlerContext || this;\n    }\n\n    setDispatcher(dispatcher) {\n        if (this.dispatcher && this.dispatcher !== dispatcher) {\n            this.dispatcher.unregister(this.name);\n        }\n        if (dispatcher) {\n            dispatcher.register(this.name, this.callback.bind(this));\n        }\n        this.dispatcher = dispatcher;\n    }\n\n    getDispatcher() {\n        return this.dispatcher;\n    }\n\n    /**\n     * Dispatches an action to the dispatcher defined on this Actions\n     *\n     * @return { Promise } A promise to be resolved when all the callbacks have finised.\n     */\n    dispatch(actionType) {\n        var args = Array.from(arguments);\n        return this.dispatcher.dispatch(actionType, ...args.slice(1));\n    }\n\n    setName(name) {\n        this.name = name;\n    }\n\n    getName() {\n        if (!this.name) {\n            this.name = `luxaflux-store-name-${_storeCounter++}`;\n        }\n        return this.name;\n    }\n\n    /**\n     * Creates a promise and waits for the callbacks specified to complete before resolve it.\n     *\n     * @param  {String<Array>|String} tokens The store tokens to wait for.\n     * @return {Promise} A promise to be resolved when the specified callbacks are completed.\n     */\n    waitFor(tokens) {\n        return this.dispatcher.waitFor(tokens);\n    }\n\n    /**\n     * This is the callback method that needs to be registered with the dispatcher\n     */\n    callback(action) {\n        var handler = this.handlers.get(action);\n        if (handler) {\n            handler.call(this.handlerContext, ...Array.from(arguments).slice(1));\n        }\n    }\n\n    /**\n     * Bind callback to specific action\n     *\n     * @param {Object} callback An object where each key is the name of an action\n     * and the value is the callback to be called when that action is dispatched\n     */\n    addActionHandler(action, handler) {\n        this.handlers.set(action, handler);\n    }\n\n    destroy() {\n        if (this.onDestroy instanceof Function) {\n            this.onDestroy();\n        }\n    }\n}\n\nexport default Store;\n\n// using a generator function\nfunction* _entries(obj) {\n   for (let key of Object.keys(obj)) {\n     yield [key, obj[key]];\n   }\n}\n"]}