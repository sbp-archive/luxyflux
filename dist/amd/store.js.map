{"version":3,"sources":["src/store.js"],"names":[],"mappings":"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","file":"src/store.js","sourcesContent":["var _storeCounter = 1;\n\nexport class Store {\n    static decorate(owner, name, dispatcher, handlers) {\n        var store = new Store(name, dispatcher, handlers, null, owner);\n        Object.defineProperties(owner, {\n            _storeDecorator: {\n                configurable: false,\n                writable: false,\n                enumberable: false,\n                value: store\n            },\n            name: {\n                get: store.getName.bind(store),\n                set: store.setName.bind(store)\n            },\n            dispatcher: {\n                get: store.getDispatcher.bind(store),\n                set: store.setDispatcher.bind(store)\n            },\n            dispatch: {\n                configurable: true,\n                writable: true,\n                enumberable: false,\n                value: store.dispatch.bind(store)\n            },\n            waitFor: {\n                configurable: true,\n                writable: true,\n                enumberable: false,\n                value: store.waitFor.bind(store)\n            }\n        });\n\n        if (owner.initialize instanceof Function) {\n            owner.initialize();\n        }\n    }\n\n    constructor(name, dispatcher, handlers = {}, initializeFn = null, handlerContext = null) {\n        this.setName(name);\n        this.setDispatcher(dispatcher);\n\n        this.handlers = new Map();\n\n        for (let [action, handler] of _entries(handlers)) {\n            this.addActionHandler(action, handler);\n        }\n\n        if (initializeFn) {\n            this.initialize = initializeFn.bind(this);\n            this.initialize();\n        }\n\n        this.handlerContext = handlerContext || this;\n    }\n\n    setDispatcher(dispatcher) {\n        if (this.dispatcher && this.dispatcher !== dispatcher) {\n            this.dispatcher.unregister(this.name);\n        }\n        dispatcher.register(this.name, this.callback.bind(this));\n        this.dispatcher = dispatcher;\n    }\n\n    getDispatcher() {\n        return this.dispatcher;\n    }\n\n    /**\n     * Dispatches an action to the dispatcher defined on this Actions\n     *\n     * @return { Promise } A promise to be resolved when all the callbacks have finised.\n     */\n    dispatch(actionType) {\n        var args = Array.from(arguments);\n        return this.dispatcher.dispatch(actionType, ...args.slice(1));\n    }\n\n    setName(name) {\n        this.name = name;\n    }\n\n    getName() {\n        if (!this.name) {\n            this.name = `luxaflux-store-name-${_storeCounter++}`;\n        }\n        return this.name;\n    }\n\n    /**\n     * Creates a promise and waits for the callbacks specified to complete before resolve it.\n     *\n     * @param  {String<Array>|String} tokens The store tokens to wait for.\n     * @return {Promise} A promise to be resolved when the specified callbacks are completed.\n     */\n    waitFor(tokens) {\n        return this.dispatcher.waitFor(tokens);\n    }\n\n    /**\n     * This is the callback method that needs to be registered with the dispatcher\n     */\n    callback(action) {\n        var handler = this.handlers.get(action);\n        if (handler) {\n            handler.call(this.handlerContext, ...Array.from(arguments).slice(1));\n        }\n    }\n\n    /**\n     * Bind callback to specific action\n     *\n     * @param {Object} callback An object where each key is the name of an action\n     * and the value is the callback to be called when that action is dispatched\n     */\n    addActionHandler(action, handler) {\n        this.handlers.set(action, handler);\n    }\n}\n\nexport default Store;\n\n// using a generator function\nfunction* _entries(obj) {\n   for (let key of Object.keys(obj)) {\n     yield [key, obj[key]];\n   }\n}\n"]}