{"version":3,"sources":["src/actioncreators.js"],"names":[],"mappings":";;;;;;;;;;;;;QAAa,cAAc;AAuBZ,iBAvBF,cAAc,CAuBX,UAAU,EAAE,OAAO,EAAE;kCAvBxB,cAAc;;AAwBnB,gBAAI,UAAU,EAAE;AACZ,oBAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aAClC;AACD,gBAAI,OAAO,EAAE;AACT,sBAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aAChC;SACJ;;qBA9BQ,cAAc;;mBAgCV,uBAAC,UAAU,EAAE;AACtB,oBAAI,CAAC,UAAU,GAAG,UAAU,CAAC;aAChC;;;mBAEY,yBAAG;AACZ,uBAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;;;;;;mBAOO,kBAAC,UAAU,EAAE;;;AACjB,oBAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjC,uBAAO,eAAA,IAAI,CAAC,UAAU,EAAC,QAAQ,MAAA,eAAC,UAAU,4BAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,CAAC;aACjE;;;mBA/Cc,kBAAC,KAAK,EAAE,UAAU,EAAE;AAC/B,oBAAI,cAAc,GAAG,IAAI,cAAc,CAAC,UAAU,CAAC,CAAC;AACpD,sBAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE;AAC3B,4CAAwB,EAAE;AACtB,oCAAY,EAAE,KAAK;AACnB,gCAAQ,EAAE,KAAK;AACf,mCAAW,EAAE,KAAK;AAClB,6BAAK,EAAE,cAAc;qBACxB;AACD,8BAAU,EAAE;AACR,2BAAG,EAAE,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC;AACtD,2BAAG,EAAE,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC;qBACzD;AACD,4BAAQ,EAAE;AACN,oCAAY,EAAE,KAAK;AACnB,gCAAQ,EAAE,KAAK;AACf,kCAAU,EAAE,KAAK;AACjB,6BAAK,EAAE,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;qBACtD;iBACJ,CAAC,CAAC;aACN;;;mBA6ByB,6BAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE;AACvD,uBAAO,YAAW;;;AACd,wBAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjC,8BAAU,CAAC,QAAQ,MAAA,CAAnB,UAAU,QAAa,UAAU,yCAAe,IAAI,GAAC,CAAC;;AAEtD,2BAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACpC,8BAAM,CAAC,IAAI,MAAA,CAAX,MAAM,oCAAe,IAAI,GAAC,CAAC,IAAI,CAC3B,UAAC,MAAM,EAAK;AACR,gCAAI,MAAM,EAAE;AACR,oCAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;6BACxB;AACD,sCAAU,CAAC,QAAQ,MAAA,CAAnB,UAAU,QAAa,UAAU,2CAAiB,IAAI,GAAC,CAAC,IAAI,CAAC,YAAM;AAC/D,uCAAO,CAAC,MAAM,CAAC,CAAC;6BACnB,CAAC,CAAC;yBACN,EACD,UAAC,KAAK,EAAK;AACP,gCAAI,KAAK,EAAE;AACP,oCAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;6BACvB;AACD,sCAAU,CAAC,QAAQ,MAAA,CAAnB,UAAU,QAAa,UAAU,wCAAc,IAAI,GAAC,CAAC,IAAI,CAAC,YAAM;AAC5D,sCAAM,CAAC,KAAK,CAAC,CAAC;6BACjB,CAAC,CAAC;yBACN,CACJ,CAAC;qBACL,CAAC,CAAC;iBACN,CAAC;aACL;;;eA5EQ,cAAc;;;YAAd,cAAc,GAAd,cAAc;yBA+EZ,cAAc","file":"src/actioncreators.js","sourcesContent":["export class ActionCreators {\n    static decorate(owner, dispatcher) {\n        var actionCreators = new ActionCreators(dispatcher);\n        Object.defineProperties(owner, {\n            _actionCreatorsDecorator: {\n                configurable: false,\n                writable: false,\n                enumberable: false,\n                value: actionCreators\n            },\n            dispatcher: {\n                get: actionCreators.getDispatcher.bind(actionCreators),\n                set: actionCreators.setDispatcher.bind(actionCreators)\n            },\n            dispatch: {\n                configurable: false,\n                writable: false,\n                enumerable: false,\n                value: actionCreators.dispatch.bind(actionCreators)\n            }\n        });\n    }\n\n    constructor(dispatcher, actions) {\n        if (dispatcher) {\n            this.setDispatcher(dispatcher);\n        }\n        if (actions) {\n            Object.assign(this, actions);\n        }\n    }\n\n    setDispatcher(dispatcher) {\n        this.dispatcher = dispatcher;\n    }\n\n    getDispatcher() {\n        return this.dispatcher;\n    }\n\n    /**\n     * Dispatches an action to the dispatcher defined on this Actions\n     *\n     * @return { Promise } A promise to be resolved when all the callbacks have finised.\n     */\n    dispatch(actionType) {\n        var args = Array.from(arguments);\n        return this.dispatcher.dispatch(actionType, ...args.slice(1));\n    }\n\n    static createServiceAction(dispatcher, actionType, action) {\n        return function() {\n            var args = Array.from(arguments);\n            dispatcher.dispatch(`${actionType}_STARTED`, ...args);\n\n            return new Promise((resolve, reject) => {\n                action.call(this, ...args).then(\n                    (result) => {\n                        if (result) {\n                            args.unshift(result);\n                        }\n                        dispatcher.dispatch(`${actionType}_COMPLETED`, ...args).then(() => {\n                            resolve(result);\n                        });\n                    },\n                    (error) => {\n                        if (error) {\n                            args.unshift(error);\n                        }\n                        dispatcher.dispatch(`${actionType}_FAILED`, ...args).then(() => {\n                            reject(error);\n                        });\n                    }\n                );\n            });\n        };\n    }\n}\n\nexport default ActionCreators;\n"]}